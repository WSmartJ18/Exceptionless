@using CodeSmith.Core.Extensions
@model Exceptionless.Models.Stack

@{
    ViewBag.Title = "Error Stack";
    Layout = "~/Views/Shared/_FilterLayout.cshtml";
}

<div id="stack-dashboard">
    <div id="overview" class="stat-container">
        <div class="stat-holder loading-indicator">
            <div class="stat">
                <span class="stat-text" data-bind="formatNumber: total">0</span>
                <span class="visible-desktop">Total Occurrences</span>
                <span class="hidden-desktop"><abbr title="Total Occurrences">Total</abbr></span>
            </div>
            <!-- /stat -->
        </div>
        <!-- /stat-holder -->

        <div class="stat-holder loading-indicator">
            <div class="stat">
                <span class="stat-text"><abbr data-bind="livestamp: firstOccurrence"></abbr></span>
                <span class="visible-desktop">First Occurrence</span>
                <span class="hidden-desktop"><abbr title="First Occurrence">First</abbr></span>
            </div>
            <!-- /stat -->
        </div>
        <!-- /stat-holder -->

        <div class="stat-holder loading-indicator">
            <div class="stat">
                <span class="stat-text"><abbr data-bind="livestamp: lastOccurrence"></abbr></span>
                <span class="visible-desktop">Last Occurrence</span>
                <span class="hidden-desktop"><abbr title="Last Occurrence">Last</abbr></span>
            </div>
            <!-- /stat -->
        </div>
    </div>
    <!-- /stat-container -->

    <p class="message-success">@ViewBag.StatusMessage</p>

    <div class="widget">
        <div class="widget-header">
            <h3>Error Stack</h3>
            <span class="badge badge-success" style="display: none" data-bind="visible: isFixed()"><span class="hidden-phone">FIXED</span><span class="visible-phone">F</span></span>
            <span class="badge badge-important" style="display: none" data-bind="visible: isRegressed()"><span class="hidden-phone">REGRESSED</span><span class="visible-phone">R</span></span>
            <span class="badge" style="display: none" data-bind="visible: isHidden()"><span class="hidden-phone">HIDDEN</span><span class="visible-phone">H</span></span>
            <div class="pull-right btn-toolbar">
                <div class="btn-group">
                    <button class="btn btn-gray" data-bind="text: !isFixed() ? 'Mark Fixed' : 'Mark Not Fixed', click: updateFixedStatus, title: !isFixed() ? 'Mark this error as fixed' : 'Mark this error as not fixed'">Mark Fixed</button>
                </div>
                <div id="visibility" class="btn-group">
                    <button class="btn btn-gray dropdown-toggle" data-toggle="dropdown"><span class="hidden-phone">Options</span><i class="visible-phone fa fa-gear" style=" margin: 0; color: inherit"></i> <span class="caret"></span></button>
                    <ul class="dropdown-menu right-aligned">
                        <li><a href="#" data-bind="click: updateIsHidden" title="Hide this error from reports" ><span data-bind="visible: isHidden()" class="fa fa-check"></span>Hide From Reports</a></li>
                        <li class="divider"></li>
                        <li><a href="#" data-bind="click: promoteToExternal" title="Used to promote error stacks to external systems.">Promote To External</a></li>
                        <li><a href="#" data-bind="click: addReferenceLink" title="Add a reference link to an external resource.">Add Reference Link</a></li>
                        <li class="divider"></li>
                        <li><a href="#" data-bind="click: updateNotificationSetting" title="Stop sending occurrence notifications for this error"><span data-bind="visible: disableNotifications()" class="fa fa-check"></span>Disable Notifications</a></li>
                        <li><a href="#" data-bind="click: updateOccurrencesAreCritical" title="All future occurrences will be marked as critical"><span data-bind="visible: occurrencesAreCritical()" class="fa fa-check"></span>Future Occurrences Are Critical</a></li>
                        <li class="divider"></li>
                        <li><a href="#" data-bind="click: resetOccurrences" title="Reset stats and occurrence data for this error">Reset Stats</a></li>
                    </ul>
                </div>
            </div>
        </div> <!-- /widget-header -->
        <div class="widget-content">
            <table class="table table-bordered table-striped table-fixed keyvalue">
                <tr>
                    <th>Title</th>
                    <td><span class="t8-lines3">@Model.Title</span></td>
                </tr>
                <tr data-bind="visible: isFixed()">
                    <th>Date Fixed</th>
                    <td><span data-bind="formatDateWithFullDateAndTime: fixedOn"></span> (<span data-bind="livestamp: fixedOn, hideTitle: true"></span>)</td>
                </tr>
@if (!String.IsNullOrEmpty(Model.Description)) {
                <tr>
                    <th>Description</th>
                    <td><span class="t8-lines2">@Model.Description</span></td>
                </tr>
}
                @if (Model.Tags.Count > 0) {
                    <tr>
                        <th>Tags</th>
                        <td>@Html.DisplayFor(m => m.Tags)</td>
                    </tr>
                }

                <tr style="display: none" data-bind="visible: references().length > 0">
                    <th data-bind="text: references().length > 1 ? 'Reference Links' : 'Reference Link'">Reference Link</th>
                    <td>
                        <!-- ko if: references().length > 1 -->
                        <ul class="fa-ul" data-bind="foreach: references">
                            <li>
                                <a href="#" target="_blank" data-bind="text: $data, attr: { href: $data }"></a>
                                <a class="delete-link" href="#" data-bind="click: $parent.removeReferenceLink"><i class="fa fa-times"></i></a>
                            </li>
                        </ul>
                        <!-- /ko -->
                        
                        <!-- ko if: references().length === 1 -->
                        <a href="#" target="_blank" data-bind="text: references()[0], attr: { href: references()[0] }"></a> 
                        <a class="delete-link" href="#" data-bind="click: function() { this.removeReferenceLink(references()[0]) }"><i class="fa fa-times"></i></a>
                        <!-- /ko -->
                    </td>
                </tr>
            </table>

            <h4>Stacking Information</h4>
            <table class="table table-bordered table-striped table-fixed keyvalue">
                @foreach (var item in Model.SignatureInfo) {
                    <tr>
                        <th>@item.Key.ToSpacedWords()</th>
                        <td>@item.Value</td>
                    </tr>
                }
            </table>

            <div id="chart-container">
                <div id="chart" class="chart-holder-small"></div>
                <div id="timeline"></div>
            </div>
        </div> <!-- /widget-content -->
    </div> <!-- /widget -->
    
    <div id="add-new-reference-modal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="add-new-reference-modal" aria-hidden="true">
        <div class="modal-header">
            <a href="#" class="close" data-dismiss="modal">&times;</a>
            <h3>Please enter a reference link</h3>
        </div>
        <div class="modal-body">
            <div class="control-group" data-bind="validationElement: url">
                <label for="url" class="control-label">URL</label>
                <div class="controls">
                    <input type="url" class="input-xlarge" data-bind="value: url, valueUpdate: 'keyup'" placeholder="Enter the URL" required>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal">Cancel</button>
            <button class="btn btn-primary pull-right" data-bind="command: saveReferencesCommand, template: { name: 'command-button-template', data: { command: saveReferencesCommand, name: 'Save Reference Link', executingName: 'Saving Reference Link' } }">Save Reference Link</button>
        </div>
    </div>
</div>
<div class="widget widget-table">

    <div class="widget-header">
        <i class="fa fa-calendar"></i>
        <h3>Recent Occurrences</h3>
    </div>
    <!-- /widget-header -->

    <div class="widget-content">
        @Html.Partial("_RecentErrors", false)
    </div>
    <!-- /widget-content -->

</div>
<!-- /widget -->

@section FooterContent {
    @Html.Partial("_CommandButtonTemplate")

    <script type="text/javascript">
        var vm;
        $(document).ready(function() {
            vm = new exceptionless.stack.DashboardViewModel('stack-dashboard', 'main-nav', 'projects', 'daterange', '#chart', 'most-recent', '#DateFixed', '@Model.Id', '@Model.ProjectId', 10, true, @Html.Raw(Json.Encode(Model)));
        });
    </script>
}