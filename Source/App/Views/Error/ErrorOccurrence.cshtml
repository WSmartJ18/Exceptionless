@using CodeSmith.Core.Extensions
@using Exceptionless.App.Models.Error
@model ErrorModel

@{
    ViewBag.Title = "Error Occurrence";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}

@Html.Partial("_Notifications")

<div class="widget" id="error-@Model.Id">
    <div class="widget-header">
        <h3>Error Occurrence</h3>
        <div class="pull-right hidden-print">
            <a href="/stack/@Model.ErrorStackId" title="Go To Stack" class="btn btn-gray fa fa-caret-up"></a>
            <a id="previousErrorLink" data-bind="attr: { href: previousErrorLink() + currentTabHash() }" title="Previous Occurrence" class="btn btn-gray fa fa-caret-left @(String.IsNullOrEmpty(Model.PreviousErrorId) ? "disabled" : null)"></a>
            <a id="nextErrorLink" data-bind="attr: { href: nextErrorLink() + currentTabHash() }" title="Next Occurrence" class="btn btn-gray fa fa-caret-right @(String.IsNullOrEmpty(Model.NextErrorId) ? "disabled" : null)"></a>
        </div>
    </div> <!-- /widget-header -->
    <div class="widget-content">
        <div class="tabbable">
            <ul class="nav nav-tabs hidden-print" data-tabs="tabs" id="error-tabs">
                <li class="active">
                    <a data-toggle="tab" href="#overview">Overview</a>
                </li>
                <li><a data-toggle="tab" href="#exception">Exception</a></li>
@if (Model.RequestInfo != null) {
                <li><a data-toggle="tab" href="#request">Request</a></li>
}
@if (Model.EnvironmentInfo != null) {
                <li><a data-toggle="tab" href="#environment">Environment</a></li>
}
@foreach (var ex in Model.Data.Where(kvp => Model.PromotedTabs.Contains(kvp.Key))) {
                <li><a data-toggle="tab" href="#ex-@ex.Key.ToHtmlIdentifier().ToLower()">@ex.Key.ToSpacedWords()</a></li>
}
@if (Model.Data.Any(kvp => !Model.PromotedTabs.Contains(kvp.Key) && !kvp.Key.StartsWith("__"))) {
                <li><a data-toggle="tab" href="#extended">Extended Data</a></li>
}
            </ul>
            
            <div class="tab-content">
                <div class="tab-pane active" id="overview">
                    @Html.Partial("_Overview", Model)
                </div>

                <div class="tab-pane" id="exception">
                    @Html.Partial("_Exception", Model)
                </div>
@if (Model.RequestInfo != null) {
                <div class="tab-pane" id="request">
                    @Html.Partial("_RequestInfo", Model)
                </div>
}        
@if (Model.EnvironmentInfo != null) {
                <div class="tab-pane" id="environment">
                    @Html.Partial("_EnvironmentInfo", Model)
                </div>
}
@foreach (var ex in Model.Data.Where(kvp => Model.PromotedTabs.Contains(kvp.Key))) {
                <div id="ex-@ex.Key.ToHtmlIdentifier().ToLower()" class="tab-pane">
                    <h3 class="visible-print">@ex.Key.ToSpacedWords()</h3>
                    <table class="table table-bordered table-striped table-fixed keyvalue hidden-print" style="margin-bottom: 15px;">
                        <tr>
                            <th>Occurred On</th>
                            <td>@Model.OccurrenceDate.ToString("MMMM d, yyyy h:mm:ss tt") (<span data-bind="livestamp: occurrence, hideTitle: true"></span>)</td>
                        </tr>
                    </table>
                    @Html.Partial("_ExtendedDataItem", new ExtendedDataItemModel { Data = ex, IsPromoted = true })
                </div>
}
@if (Model.Data.Any(kvp => !Model.PromotedTabs.Contains(kvp.Key) && !kvp.Key.StartsWith("__"))) {
                <div class="tab-pane" id="extended">
                    @Html.Partial("_ExtendedData", Model)
                </div>
}
            </div>
        </div>

        <div class="form-actions hidden-phone">
            @Html.ActionLink("Go To Stack", "Index", "Stack", new { id = Model.ErrorStackId }, new { @class = "btn" })
            <div class="pull-right">
                <a data-bind="attr: { href: previousErrorLink() + currentTabHash() }" title="Previous Occurrence" class="btn btn-primary @(String.IsNullOrEmpty(Model.PreviousErrorId) ? "disabled" : null)">Previous Occurrence</a>
                <a data-bind="attr: { href: nextErrorLink() + currentTabHash() }" title="Next Occurrence" class="btn btn-primary @(String.IsNullOrEmpty(Model.NextErrorId) ? "disabled" : null)">Next Occurrence</a>
            </div>
        </div> <!-- /form-actions -->
    </div> <!-- /widget-content -->
</div> <!-- /widget -->

@section FooterContent {
    <script type="text/javascript">
        $(document).ready(function() {
            var vm = new exceptionless.error.DashboardViewModel('error-@Model.Id', 'main-nav', 'projects', 'daterange', 'error-tabs', '@Model.ProjectId', false, @Html.Raw(Json.Encode(new { ProjectId = Model.ProjectId, OccurrenceDate = Model.OccurrenceDate, PreviousErrorId = Model.PreviousErrorId, NextErrorId = Model.NextErrorId, ExceptionlessClientInfo = Model.ExceptionlessClientInfo, PromotedTabs = Model.PromotedTabs })));
        
            $("body").keydown(function(e) {
                if(e.keyCode == 37) { // left
                    window.location = $("#previousErrorLink").attr('href');
                } else if(e.keyCode == 39) { // right
                    window.location = $("#nextErrorLink").attr('href');
                }
            });
        });
    </script>
    @Html.Raw(Model.CustomContent)
}