@using Exceptionless.App.Extensions
@model Exceptionless.App.Models.Account.LoginModel

@{
    ViewBag.Title = "Log In";
    Layout = "~/Views/Shared/_BareLayout.cshtml";
}

<div class="row">
    <div class="span8 offset2">
        
        @if (!ViewData.ModelState.IsValid && ViewData.ModelState.ContainsKey("")) {
            <div class="alert alert-block alert-error fade in">
                <h4>Validation Errors</h4>
                    
                @Html.ValidationSummary(true, null)
            </div>
        }

        <div class="widget">
            <div class="widget-content">
                <div class="form-horizontal">
                    <div class="controls">
                        <h4 style="margin-top: -5px;">Login with</h4>
                    </div>
                    <div class="controls">
                        @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl, token = ViewBag.Token })
                    </div>
                    <div class="controls">
                        <div class="span4 horizontal-divider">
                            <p>OR</p>
                            <span></span>
                        </div>
                    </div>
                </div>
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class="form-horizontal" })) {
                    @Html.AntiForgeryToken()

                    @Html.BeginControlGroupFor(m => m.EmailAddress)
                        @Html.LabelFor(m => m.EmailAddress, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.EmailAddress, new { @class = "span4", placeholder = "Email", type = "email" })
                            @Html.ValidationMessageFor(m => m.EmailAddress, null, new { @class = "help-inline" })
                        </div>
                    @Html.EndControlGroup()

                    @Html.BeginControlGroupFor(m => m.Password)
                        @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                        <div class="controls">
                            @Html.PasswordFor(m => m.Password, new { @class = "span4", placeholder = "Password" })
                            @Html.ValidationMessageFor(m => m.Password, null, new { @class = "help-inline" })
                        </div>
                    @Html.EndControlGroup()

                    <div class="controls" style="margin-top: -5px; margin-bottom: 15px;">
                        @Html.BeginLabelFor(m => m.RememberMe, new { @class = "checkbox" })
                        @Html.CheckBoxFor(m => m.RememberMe)
                        Remember Me
                        @Html.EndLabel()
                    </div>

                    <div class="controls">
                        <input type="submit" class="btn btn-primary span2" value="Log In" style="margin-bottom: 5px;" />
                        @Html.ActionLink("Sign Up", "Signup", "Account", null, new { @class="btn", style="margin-bottom: 5px;" })
                        <p>@Html.ActionLink("Forgot password?", "ForgotPassword", "Account")</p>
                    </div> <!-- /form-actions -->
                }
            </div> <!-- /widget-content -->
        </div> <!-- /widget -->
    </div> <!-- /span6 -->
</div> <!-- /row -->
